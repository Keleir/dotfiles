{
    "window.menuBarVisibility": "toggle",
    "workbench.colorTheme": "Dracula",
    "workbench.iconTheme": "material-icon-theme",
    "git.confirmSync": false,
    // 以像素为单位控制字号。
    "editor.fontSize": 18,
    // 控制字体系列。
    "editor.fontFamily": "DejaVu Sans Mono",
    // "editor.fontFamily": "Monaco",
    // 控制问题预览是否应在打开文件时自动显示它们。
    "problems.autoReveal": true,
    "workbench.activityBar.visible": false,
    "window.zoomLevel": 0,
    "workbench.sideBar.location": "left",
    "workbench.statusBar.visible": false,

    // 控制终端的字体系列，这在编辑器中是默认的。fontFamily 的值
    "terminal.integrated.fontFamily": "DejaVu Sans Mono",

    // 控制终端的字号(以像素为单位)
    "terminal.integrated.fontSize": 19,
    "editor.minimap.enabled": false,

    // Select the code segment by selecting item.
    "symbolOutline.doSelect": false,

    // 控制折行方式： - “off”（禁用折行）， - “on”（视区折行)
    "editor.wordWrap": "on",

    // 控制编辑器应如何呈现当前行突出显示
    // 可能为“无”、“装订线”、“线”和“全部”
    "editor.renderLineHighlight": "none",

    // 启用后，将在保存文件时剪裁尾随空格。
    "files.trimTrailingWhitespace": true,

    "window.openFilesInNewWindow": "on",

    // 如果已启用，将自动更改为高对比度主题；
    // 如果 Windows 正在使用高对比度主题，
    // 则当离开 Windows 高对比度主题时会更改为深色主题。
    "window.autoDetectHighContrast": false,

    // 控制是否将打开的编辑器显示为预览。
    // 预览编辑器将会重用至其被保留
    // (例如，通过双击或编辑)，且其字体样式将为斜体。
    "workbench.editor.enablePreview": false,

    // 控制 Quick Open 中打开的编辑器是否显示为预览。
    // 预览编辑器可以重新使用，直到将其保留(例如，通过双击或编辑)。
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "diffEditor.ignoreTrimWhitespace": false,

    // 配置 glob 模式以决定文件或文件夹的显示和隐藏
    "files.exclude": {
        "**/.svn": false,
        "**/.hg": false,
        "**/*.pyc": true,
        "**/.DS_Store": false
    },

    // 指向 PHP 可执行文件。
    "php.validate.executablePath": "/usr/bin/php",
    "files.autoSave": "afterDelay",
    "editor.renderWhitespace": "none",
    "editor.accessibilitySupport": "off",


    // Golang Config
    // Pick 'gofmt', 'goimports', 'goreturns' or 'goformat' to run on format.
    "go.formatTool": "goimports",

    // If false, the import statements will be excluded while using the Go to Symbol in File feature
    "go.gotoSymbol.includeImports": true,

    // Python Static Synatx Lint
    "python.autoComplete.addBrackets": true,
    "python.linting.flake8Enabled": true,
    "python.sortImports.path": "/usr/bin/isort",
    "python.linting.flake8Args": [
        "--max-line-length=100",
        // "--ignore=E501"
        "--ignore=E302"
    ],
    "python.formatting.autopep8Args": [
        "--max-line-length=100",
        "--ignore=E501"
    ],
    "python.linting.pylintArgs": [
        "--max-line-length=100"
    ],

    "editor.codeActionsOnSave": {
		"source.organizeImports": true
	}
}